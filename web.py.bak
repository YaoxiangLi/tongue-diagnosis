# -*- coding: utf-8 -*-
import os
from werkzeug.utils import secure_filename
from flask import Flask, redirect, url_for, request, render_template, flash
import time
import json
from .src import cnnModel
from .src import util
from .src import dataPreprocess


def stDiagnose(imgPath):
    print("predicting: " + imgPath)
    x = util.getImageMatrix(imgPath)
    x = dataPreprocess.preprocessImgMatrix(x)
    x = x.reshape([1] + list(x.shape))
    res = []
    for i in range(3):
        res.append(models[i].predict_on_batch(x).tolist()[0])
        # res.append(models[i].predict_on_batch(x))
    print(res)
    # res = [[0.0, 1.0, 0.0], [0, 0.1, 0.9999, 0.0], [0.0, 1.0]]
    return res


# Predictive model path
modelPath = '../models/'
models = []
for i in range(3):
    print('loading model '+str(i))
    models.append(cnnModel.loadModelFromFile(modelPath + 'dataType' + str(i) + '-epoch45-size256.h5'))


# Uploaded image folder
UPLOAD_FOLDER = 'images/'
ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif'])

# Flask
app = Flask(__name__, static_folder='', static_url_path='')
# Set up upload folder
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER


# Define a function to check if an extension is valid
def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS


@app.route('/', methods=['GET', 'POST'])
def home():
    res = [[0.0, 1.0, 0.0], [0, 0.1, 0.9999, 0.0], [0.0, 1.0]]
    labelDict = {0: {0: '舌色偏红', 1: '舌色正常', 2: '舌色偏紫'},
                 1: {0: '无舌苔', 1: '舌苔正常', 2: '舌苔偏白', 3: '舌苔偏黄'},
                 2: {0: '无齿痕', 1: '有齿痕'}}
    if request.method == 'GET':
        return render_template('base.html', results=res, labelDict=labelDict)
    elif request.method == 'POST':
        # check if the post request has the file part
        if 'file' not in request.files:
            flash('No file part')
            return render_template('base.html', results=res, labelDict=labelDict)
        file = request.files['file']
        # if user does not select file, browser also
        # submit a empty part without filename
        if file.filename == '':
            flash('No selected file')
            return render_template('base.html', results=res, labelDict=labelDict)
        if file and allowed_file(file.filename):
            # filename = secure_filename(file.filename)
            filename = str(time.time()) + '.jpg'
            # file_path = 'images/' + filename
            # image_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            image_path = '/home/bach/tongue-diag/web/images/' + filename
            file.save(image_path)
            res = stDiagnose(image_path)
            # return redirect(url_for('predict'))
            return render_template('base.html', results=res, labelDict=labelDict)


# @app.route('/upload', methods=['GET', 'POST'])
# def upload():
#     if request.method == 'GET':
#         return render_template('upload.html')
#     else:
#         file = request.files['file']
#         if file:
#             name = str(time.time()) + '.jpg'
#             srcFile = 'images/' + name
#             print(srcFile)
#             file.save(srcFile)
#             # tgtFile = 'static/shetou1.jpg'
#             # util.removeFile(tgtFile)
#             # shutil.move(srcFile, tgtFile)
#             return '上传成功<script>window.location.href ="index.html?img=' + name + '"</script>'
#             # return redirect(url_for('predict'))


@app.route('/predict', methods=['GET'])
def predict():
    path = 'images/' + request.args.get('img')
    result = stDiagnose(path)
    result = json.dumps(result)
    print(result)
    return result

# imgPath = '/home/bach/tongue-diag/web/images/st.jpg'
# res = stDiagnose(imgPath)
# print(stDiagnose('./images/st.jpg'))


if __name__ == '__main__':
    # app.debug = True
    app.run(host='0.0.0.0')

